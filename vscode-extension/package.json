{
  "name": "atlassian-mcp-server",
  "displayName": "Atlassian MCP Server",
  "description": "Connect VS Code to Atlassian (Jira/Confluence) via Model Context Protocol for AI-powered workflows",
  "version": "1.0.0",
  "publisher": "sethdford",
  "engines": {
    "vscode": "^1.74.0"
  },
  "license": "MIT",
  "categories": ["Other", "Machine Learning"],
  "keywords": ["atlassian", "jira", "confluence", "mcp", "ai", "copilot", "productivity", "project-management", "developer-tools"],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/sethdford/mcp-nodejs-atlassian.git",
    "directory": "vscode-extension"
  },
  "homepage": "https://github.com/sethdford/mcp-nodejs-atlassian#readme",
  "bugs": {
    "url": "https://github.com/sethdford/mcp-nodejs-atlassian/issues"
  },
  "icon": "media/atlassian-icon.png",
  "contributes": {
    "commands": [
      {
        "command": "atlassianMcp.configure",
        "title": "Configure Atlassian MCP",
        "category": "Atlassian",
        "icon": "$(gear)"
      },
      {
        "command": "atlassianMcp.start",
        "title": "Start MCP Server",
        "category": "Atlassian",
        "icon": "$(play)"
      },
      {
        "command": "atlassianMcp.stop",
        "title": "Stop MCP Server",
        "category": "Atlassian",
        "icon": "$(stop)"
      },
      {
        "command": "atlassianMcp.restart",
        "title": "Restart MCP Server",
        "category": "Atlassian",
        "icon": "$(refresh)"
      },
      {
        "command": "atlassianMcp.searchJira",
        "title": "Search Jira Issues",
        "category": "Atlassian",
        "icon": "$(search)"
      },
      {
        "command": "atlassianMcp.searchConfluence",
        "title": "Search Confluence",
        "category": "Atlassian",
        "icon": "$(book)"
      },
      {
        "command": "atlassianMcp.refresh",
        "title": "Refresh",
        "category": "Atlassian",
        "icon": "$(refresh)"
      },
      {
        "command": "atlassianMcp.oauthSetup",
        "title": "OAuth Setup Wizard",
        "category": "Atlassian",
        "icon": "$(key)"
      }
    ],
    "configuration": {
      "title": "Atlassian MCP",
      "properties": {
        "atlassianMcp.jiraUrl": {
          "type": "string",
          "description": "Jira instance URL (e.g., https://your-company.atlassian.net)",
          "scope": "application"
        },
        "atlassianMcp.confluenceUrl": {
          "type": "string",
          "description": "Confluence instance URL (e.g., https://your-company.atlassian.net/wiki)",
          "scope": "application"
        },
        "atlassianMcp.authMethod": {
          "type": "string",
          "enum": ["oauth", "token", "pat"],
          "default": "oauth",
          "description": "Authentication method",
          "enumDescriptions": [
            "OAuth 2.0 (Recommended for Cloud)",
            "API Token (Cloud)",
            "Personal Access Token (Server/Data Center)"
          ],
          "scope": "application"
        },
        "atlassianMcp.autoStart": {
          "type": "boolean",
          "default": true,
          "description": "Automatically start MCP server on VS Code startup",
          "scope": "application"
        },
        "atlassianMcp.serverPort": {
          "type": "number",
          "default": 8000,
          "description": "Port for MCP server HTTP transport",
          "scope": "application"
        },
        "atlassianMcp.readOnlyMode": {
          "type": "boolean",
          "default": false,
          "description": "Run server in read-only mode (disables write operations)",
          "scope": "application"
        },
        "atlassianMcp.verbose": {
          "type": "boolean",
          "default": false,
          "description": "Enable verbose logging",
          "scope": "application"
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "atlassianMcp",
          "name": "Atlassian MCP",
          "when": "atlassianMcp.enabled"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "atlassianMcp",
        "contents": "Welcome to Atlassian MCP Server!\n[Configure Connection](command:atlassianMcp.configure)\n[OAuth Setup Wizard](command:atlassianMcp.oauthSetup)\nTo learn more about setting up your Atlassian integration, check out the [documentation](https://github.com/sethdford/mcp-nodejs-atlassian#readme)."
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "atlassianMcp.configure",
          "when": "view == atlassianMcp",
          "group": "navigation@1"
        },
        {
          "command": "atlassianMcp.refresh",
          "when": "view == atlassianMcp",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "atlassianMcp.searchJira",
          "when": "view == atlassianMcp && viewItem == jira-project",
          "group": "inline"
        },
        {
          "command": "atlassianMcp.searchConfluence",
          "when": "view == atlassianMcp && viewItem == confluence-space",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "atlassianMcp.configure"
        },
        {
          "command": "atlassianMcp.start"
        },
        {
          "command": "atlassianMcp.stop"
        },
        {
          "command": "atlassianMcp.restart"
        },
        {
          "command": "atlassianMcp.searchJira"
        },
        {
          "command": "atlassianMcp.searchConfluence"
        },
        {
          "command": "atlassianMcp.oauthSetup"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "^18.0.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.15.0",
    "eslint": "^8.28.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "axios": "^1.6.0"
  }
} 